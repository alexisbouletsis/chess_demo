openapi: 3.0.3
info:
  title: YouChess API
  description: This is YouChess API
  contact:
    email: papadaka@ece.auth.gr
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
servers:
- url: https://virtserver.swaggerhub.com/TSAISIDOROS/SySkaki/1.0.0
  description: SwaggerHub API Auto Mocking
tags:
- name: group
  description: Endpoints related to chess groups
- name: coach
  description: Endpoints related to coaches
- name: student
  description: Endpoints related to students
- name: classroom
  description: Endpoints related to classrooms
paths:
  /group:
    post:
      tags:
      - group
      summary: Create a new group
      operationId: createGroup
      requestBody:
        description: FR1-The coach must be able to create groups
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupIn'
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupOut'
        "405":
          description: Invalid input
      x-swagger-router-controller: Group
  /group/{groupID}:
    get:
      tags:
      - group
      summary: Get group by ID
      description: FR6 - The user must be able to see the groups they are in
      operationId: getGroup
      parameters:
      - name: groupID
        in: path
        description: Group ID to get
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupOut'
        "400":
          description: Invalid group ID
      x-swagger-router-controller: Group
    delete:
      tags:
      - group
      summary: Delete a group
      description: FR2 - The coach must be able to delete groups
      operationId: deleteGroup
      parameters:
      - name: groupID
        in: path
        description: Group ID to delete
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Successful operation
        "400":
          description: Invalid group ID
      x-swagger-router-controller: Group
  /groups/enroll:
    post:
      tags:
      - group
      summary: Enroll a student in a group
      description: FR5 - The student must be able to enroll in an available group
      operationId: enrollStudent
      requestBody:
        description: JSON object with the studentID and groupID
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/groups_enroll_body'
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/groups_enroll_body'
        "400":
          description: Could not enroll student
      x-swagger-router-controller: Group
  /groups/unenroll:
    post:
      tags:
      - group
      summary: Unenroll a student from a group
      description: FR7 - The student must be able to leave a group
      operationId: unenrollStudent
      requestBody:
        description: JSON object with the studentID and groupID
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/groups_unenroll_body'
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupOut'
        "400":
          description: Invalid ID supplied
        "404":
          description: Group not found
        "405":
          description: Validation exception
      x-swagger-router-controller: Group
  /group/findAvailable:
    get:
      tags:
      - group
      summary: Find available groups
      description: "FR3,FR4 - The student must be able to see a list of available\
        \ groups, and filter them by their attributes"
      operationId: findAvailableGroups
      parameters:
      - name: price_min
        in: query
        description: Min price value that needs to be considered for filtering
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          example: 4
      - name: price_max
        in: query
        description: Max price value that needs to be considered for filtering
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          example: 18
      - name: level
        in: query
        description: Level that needs to be considered for filtering
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - Beginner
          - Intermediate
          - Advanced
      - name: sortBy
        in: query
        description: Sorting method that needs to be considered for filtering
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - price(asc.)
          - price(desc.)
          - availableSeats(desc.)
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GroupOut'
                x-content-type: application/json
        "400":
          description: Invalid filters
      x-swagger-router-controller: Group
  /coach/{coachID}:
    get:
      tags:
      - coach
      summary: Get coach by ID
      operationId: getCoach
      parameters:
      - name: coachID
        in: path
        description: Coach ID to get
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Coach'
        "400":
          description: Invalid coach ID
      x-swagger-router-controller: Coach
  /coach:
    post:
      tags:
      - coach
      summary: Create a new coach given their name
      operationId: postCoach
      requestBody:
        description: JSON object with the studentID and groupID
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/coach_body'
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Coach'
        "400":
          description: Invalid coach ID
      x-swagger-router-controller: Coach
  /student/{studentID}:
    get:
      tags:
      - student
      summary: Get student by ID
      operationId: getStudent
      parameters:
      - name: studentID
        in: path
        description: Student ID to get
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
        "400":
          description: Invalid student ID
      x-swagger-router-controller: Student
  /group/{groupID}/classroom/:
    get:
      tags:
      - classroom
      summary: Get classroom by ID
      description: FR8 - The group participants must be able to join the classroom
      operationId: getClassroom
      parameters:
      - name: groupID
        in: path
        description: Classroom ID to get
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Classroom'
        "400":
          description: Invalid classroom ID
      x-swagger-router-controller: Classroom
    put:
      tags:
      - classroom
      summary: Update the classroom
      description: FR12 - The coach must be able to change who has the permission
        to edit the chessboard
      operationId: updateClassroom
      parameters:
      - name: groupID
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        description: Classroom object with the updated user list and/or editing permission
          owner
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Classroom'
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Classroom'
        "400":
          description: Invalid ID supplied
        "404":
          description: Classroom not found
        "405":
          description: Validation exception
      x-swagger-router-controller: Classroom
  /group/{groupID}/classroom/chessboard:
    get:
      tags:
      - classroom
      summary: Get the chessboard embeding url by groupID and studentID
      description: FR9 - The system must be able to provide a shared chessboard for
        the participants of a classroom
      operationId: groupGroupIDClassroomChessboardGET
      parameters:
      - name: groupID
        in: path
        description: Classroom ID for the chessboard
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
          example: 7
      - name: userID
        in: query
        description: userID for the chessboard
        required: true
        style: form
        explode: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Chessboard'
        "400":
          description: Invalid Classroom ID or Student ID
      x-swagger-router-controller: Classroom
  /group/{groupID}/classroom/chessboard/setEditor:
    post:
      tags:
      - classroom
      summary: Update studentID of the student who is allowed to edit the chessboard
      description: FR10 - The coach must be able to change the ID of the student in
        controll of the Chessboard
      operationId: groupGroupIDClassroomChessboardSetEditorPOST
      parameters:
      - name: groupID
        in: path
        description: Classroom ID for the chessboard
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      - name: userID
        in: query
        description: userID of the user who is allowed to edit the chessboard
        required: true
        style: form
        explode: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Successful operation
        "400":
          description: Invalid Classroom ID or New Student ID
      x-swagger-router-controller: Classroom
  /group/{groupID}/classroom/videocall:
    get:
      tags:
      - classroom
      summary: Get video call by groupID and studentID
      description: FR11 - The system must be able to provide a shared video call for
        the participants of a classroom
      operationId: groupGroupIDClassroomVideocallGET
      parameters:
      - name: groupID
        in: path
        description: Classroom ID for the video call
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      - name: userID
        in: query
        description: User ID for the video call
        required: true
        style: form
        explode: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VideoCall'
        "400":
          description: Invalid Classroom ID or Student ID
      x-swagger-router-controller: Classroom
components:
  schemas:
    GroupIn:
      type: object
      properties:
        coachID:
          type: integer
          format: int64
          example: 8765
        level:
          type: string
          example: Intermediate
          enum:
          - Beginner
          - Intermediate
          - Advanced
        price:
          type: number
          format: double
          example: 10.5
        availableSeats:
          type: integer
          format: int32
          example: 5
        schedule:
          type: string
          example: 5 O'clock every Monday
    GroupOut:
      type: object
      properties:
        ID:
          type: integer
          format: int64
          example: 10
        studentIDs:
          type: array
          example:
          - 198772
          - 32224
          - 44221
          items:
            type: integer
            format: int64
        coachID:
          type: integer
          format: int64
          example: 8765
        level:
          type: string
          example: Intermediate
          enum:
          - Beginner
          - Intermediate
          - Advanced
        price:
          type: number
          format: double
          example: 10.5
        availableSeats:
          type: integer
          format: int32
          example: 5
        schedule:
          type: string
          example: 5 O'clock every Monday
      example:
        schedule: 5 O'clock every Monday
        level: Intermediate
        price: 10.5
        availableSeats: 5
        ID: 10
        studentIDs:
        - 198772
        - 32224
        - 44221
        coachID: 8765
    Coach:
      type: object
      properties:
        ID:
          type: integer
          format: int64
          example: 8765
        name:
          type: string
          example: John Doe
        groupsCreated:
          type: array
          format: int64
          example: "198772, 32224, 44221"
          items: {}
      example:
        name: John Doe
        groupsCreated: "198772, 32224, 44221"
        ID: 8765
    Student:
      type: object
      properties:
        ID:
          type: integer
          format: int64
          example: 198772
        name:
          type: string
          example: Jane Smith
        groupsEnrolled:
          type: array
          format: int64
          example: "198772, 32224, 44221"
          items: {}
      example:
        name: Jane Smith
        ID: 198772
        groupsEnrolled: "198772, 32224, 44221"
    Classroom:
      type: object
      properties:
        ID:
          type: integer
          format: int64
          example: 1234
        userList:
          type: array
          example:
          - 198772
          - 32224
          - 44221
          items:
            type: integer
            format: int64
        editingPermissionOwner:
          type: integer
          format: int64
          example: 198772
      example:
        userList:
        - 198772
        - 32224
        - 44221
        ID: 1234
        editingPermissionOwner: 198772
    Chessboard:
      type: object
      properties:
        url:
          type: string
          example: https://chessboard-service.com/1234
      example:
        url: https://chessboard-service.com/1234
    VideoCall:
      type: object
      properties:
        url:
          type: string
          example: https://videocall-service.com/1234
      example:
        url: https://videocall-service.com/1234
    groups_enroll_body:
      required:
      - groupID
      - studentID
      type: object
      properties:
        studentID:
          type: integer
          format: int64
        groupID:
          type: integer
          format: int64
      example:
        studentID: 0
        groupID: 6
    groups_unenroll_body:
      required:
      - groupID
      - studentID
      type: object
      properties:
        studentID:
          type: integer
          format: int64
        groupID:
          type: integer
          format: int64
    coach_body:
      required:
      - name
      type: object
      properties:
        name:
          type: string
